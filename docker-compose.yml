services:
  #Database
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=resonance
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Ruflesis2210
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  #Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=resonance
      - DB_USER=postgres
      - DB_PASSWORD=Ruflesis2210
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_KEY=django-insecure-development-key-change-in-production
      - ENVIRONMENT=development
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=localhost:3000
    depends_on:
      db:
        condition: service_healthy

  #Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - API_URL=http://localhost:3000
      - ENVIRONMENT=development
      - NUXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend

volumes:
  postgres_data: